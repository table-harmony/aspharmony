@using DataAccessLayer.Entities
@using Microsoft.AspNetCore.Identity

@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - AspHarmony</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link id="theme-css" rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">

    <style>
        .dropdown-menu {
            z-index: 9999 !important;
        }
        
        .navbar {
            z-index: 1030;
        }

        .dropdown {
            position: relative !important;
        }

        .navbar-nav .dropdown-menu {
            position: absolute !important;
        }

        body {
            min-height: 100vh;
            display: flex;
            flex-direction: column;
        }

        main {
            flex: 1 0 auto;
        }

    </style>
</head>
<body class="d-flex flex-column min-vh-100 mb-0">
    <header>
        <nav class="navbar navbar-expand-lg navbar-light border-bottom box-shadow mb-3">
            <div class="container">
                <a class="navbar-brand d-flex align-items-center" asp-controller="Home" asp-action="Index">
                    <i class="bi bi-book text-primary me-2"></i>
                    <span class="fw-bold"><span class="text-primary">Asp</span>Harmony</span>
                </a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarContent">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarContent">
                    <ul class="navbar-nav me-auto">
                        @if (User.Identity?.IsAuthenticated ?? false) {
                            <li class="nav-item">
                                <a class="nav-link @(ViewContext.RouteData.Values["Controller"]?.ToString() == "Book" ? "active text-primary" : "")" asp-controller="Book" asp-action="Index">
                                    <i class="bi bi-book"></i> Books
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link @(ViewContext.RouteData.Values["Controller"]?.ToString() == "Library" ? "active text-primary" : "")" asp-controller="Library" asp-action="Index">
                                    <i class="bi bi-collection"></i> Libraries
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link @(ViewContext.RouteData.Values["Controller"]?.ToString() == "Feedback" ? "active text-primary" : "")" asp-controller="Feedback" asp-action="Create">
                                    <i class="bi bi-chat-dots"></i> Feedback
                                </a>
                            </li>
                        }
                    </ul>
                    <ul class="navbar-nav">
                        @if (User.Identity?.IsAuthenticated ?? false) {
                            <li class="nav-item dropdown">
                                <a class="nav-link dropdown-toggle @((ViewContext.RouteData.Values["Controller"]?.ToString() == "Account" || ViewContext.RouteData.Values["Controller"]?.ToString() == "Admin") ? "active text-primary" : "")" role="button" data-bs-toggle="dropdown">
                                    <i class="bi bi-person-circle"></i> Account
                                </a>
                                <ul class="dropdown-menu dropdown-menu-end">
                                    <li>
                                        <a class="dropdown-item" asp-controller="Account" asp-action="Index">
                                            <i class="bi bi-person"></i> Profile
                                        </a>
                                    </li>
                                    @if (User.IsInRole("Admin")) {
                                        <li>
                                            <a class="dropdown-item" asp-controller="Admin" asp-action="Index">
                                                <i class="bi bi-shield-lock"></i> Admin
                                            </a>
                                        </li>
                                    }
                                    <li><hr class="dropdown-divider"></li>
                                    <li>
                                        <form asp-controller="Account" asp-action="Logout" method="post">
                                            <button type="submit" class="dropdown-item">
                                                <i class="bi bi-box-arrow-right"></i> Logout
                                            </button>
                                        </form>
                                    </li>
                                </ul>
                            </li>
                        } else {
                            <li class="nav-item">
                                <a class="nav-link" asp-controller="Account" asp-action="Register">
                                    <i class="bi bi-person-plus"></i> Register
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" asp-controller="Account" asp-action="Login">
                                    <i class="bi bi-box-arrow-in-right"></i> Login
                                </a>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </nav>
    </header>

    <main class="flex-shrink-0">
        <div class="container mb-5">
            @RenderBody()
        </div>
    </main>
    <footer class="footer mt-auto py-4 border-top">
        <div class="container">
            <div class="row align-items-center justify-content-center text-center">
                <div class="col-md-6 d-flex flex-column align-items-center">
                    <span>&copy; @DateTime.Now.Year - AspHarmony</span>
                </div>
                <div class="col-md-6 d-flex flex-column align-items-center mt-3 mt-md-0">
                    <div class="d-flex align-items-center">
                        <label for="themeSelector" class="me-2 d-none">Choose Theme:</label>
                        <select id="themeSelector" class="form-select d-inline w-auto">
                            <option value="site.css">Default</option>
                            <option value="cyborg.css">Cyborg</option>
                            <option value="morph.css">Morph</option>
                            <option value="quartz.css">Quartz</option>
                            <option value="sketchy.css">Sketchy</option>
                            <option value="vapor.css">Vapor</option>
                            <option value="zephyr.css">Zephyr</option>
                        </select>
                        <a href="https://github.com/table-harmony/aspharmony" class="text-decoration-none ms-3 text-primary">
                            <i class="bi bi-github"></i> GitHub
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </footer>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script>
        $(document).ready(function () {
            const themeSelector = $("#themeSelector");
            const themeLink = $("#theme-css");

            const savedTheme = localStorage.getItem("selectedTheme") || "site.css";
            themeLink.attr("href", `/css/${savedTheme}`);
            themeSelector.val(savedTheme);

            themeSelector.on("change", function () {
                const selectedTheme = themeSelector.val();
                themeLink.attr("href", `/css/${selectedTheme}?v=${new Date().getTime()}`);
                localStorage.setItem("selectedTheme", selectedTheme);
            });
        });
    </script>
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
