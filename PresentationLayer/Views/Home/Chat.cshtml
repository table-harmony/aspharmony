@{
    ViewData["Title"] = "Chat";
}

<div class="card shadow-sm">
    <div class="card-header">
        <h2 class="mb-0">
            <i class="bi bi-chat-dots"></i> Live Chat
        </h2>
        <p class="text-muted mb-0">Connect with other users in real-time</p>
    </div>
    <div class="card-body">
        <div id="messagesList" class="chat-messages mb-4" style="height: 400px; overflow-y: auto;">
            <!-- Messages will be displayed here -->
        </div>
        
        <div class="chat-input-area">
            <form id="chatForm" class="d-flex gap-2">
                <div class="flex-grow-1">
                    <div class="input-group">
                        <span class="input-group-text">
                            <i class="bi bi-chat-text"></i>
                        </span>
                        <input type="text" id="messageInput" class="form-control" 
                               placeholder="Type your message..." autocomplete="off" required>
                    </div>
                </div>
                <button type="submit" class="btn btn-primary">
                    <i class="bi bi-send"></i> Send
                </button>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/js/signalr/dist/browser/signalr.js"></script>
    <script>
        $(document).ready(function() {
            const connection = new signalR.HubConnectionBuilder()
                .withUrl("https://localhost:7086/chat-hub")
                .configureLogging(signalR.LogLevel.Information)
                .build();

            // Handle receiving messages
            connection.on("ReceiveMessage", function (message) {
                const [userId, messageText] = message.split(': ');
                const encodedMsg = $('<div />').text(messageText).html();
                const encodedUser = $('<div />').text(userId).html();
                const isMyMessage = userId === connection.connectionId;
                
                const messageElement = $(`
                    <div class="chat-message mb-3 ${isMyMessage ? 'chat-message-mine' : ''}">
                        <div class="d-flex flex-column ${isMyMessage ? 'align-items-end' : 'align-items-start'}">
                            <small class="message-user text-muted mb-1">
                                ${isMyMessage ? 'You' : encodedUser}
                            </small>
                            <div class="chat-bubble p-3 rounded">
                                <div class="message-content">${encodedMsg}</div>
                                <small class="message-time text-muted">${new Date().toLocaleTimeString()}</small>
                            </div>
                        </div>
                    </div>
                `);
                
                $("#messagesList").append(messageElement);
                scrollToBottom();
            });

            // Handle form submission
            $("#chatForm").on("submit", function(e) {
                e.preventDefault();
                sendMessage();
            });

            // Handle enter key
            $("#messageInput").on("keypress", function(e) {
                if (e.which === 13 && !e.shiftKey) {
                    e.preventDefault();
                    sendMessage();
                }
            });

            function sendMessage() {
                const message = $("#messageInput").val().trim();
                if (message) {
                    connection.invoke("SendMessage", message)
                        .catch(err => console.error("Error sending message:", err));
                    $("#messageInput").val("").focus();
                }
            }

            function scrollToBottom() {
                const messagesList = $("#messagesList");
                messagesList.animate({
                    scrollTop: messagesList[0].scrollHeight
                }, 200);
            }

            // Start the connection
            connection.start()
                .then(() => console.log("Connected to chat hub"))
                .catch(err => console.error("Error connecting:", err));
        });
    </script>

    <style>
        .chat-messages {
            scrollbar-width: thin;
            scrollbar-color: var(--bs-info) transparent;
            padding: 1rem;
        }

        .chat-messages::-webkit-scrollbar {
            width: 6px;
        }

        .chat-messages::-webkit-scrollbar-track {
            background: transparent;
        }

        .chat-messages::-webkit-scrollbar-thumb {
            border-radius: 3px;
        }

        .chat-bubble {
            background: var(--bs-light);
            max-width: 80%;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }

        .chat-message-mine .chat-bubble {
            background: var(--bs-primary);
            color: white;
        }

        .message-user {
            font-size: 0.875rem;
            padding: 0 0.5rem;
        }

        .chat-message-mine .message-time {
            color: rgba(255, 255, 255, 0.75) !important;
        }

        .chat-input-area {
            border-top: 1px solid var(--bs-border-color);
            padding-top: 1rem;
        }

        .form-control {
            background-color: var(--bs-body-bg);
            border-color: var(--bs-info);
            color: var(--bs-body-color);
        }

        .form-control:focus {
            background-color: var(--bs-body-bg);
            border-color: var(--bs-info);
            box-shadow: 0 0 0 0.25rem rgba(var(--bs-info-rgb), 0.25);
            color: var(--bs-body-color);
        }

        .message-time {
            font-size: 0.75rem;
            margin-top: 0.25rem;
        }

        .chat-message-mine .message-time,
        .chat-message-mine .message-user {
            color: var(--bs-primary) !important;
        }

        .chat-message-mine .chat-bubble .message-time {
            color: rgba(255, 255, 255, 0.75) !important;
        }
    </style>
}